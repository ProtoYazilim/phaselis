diff --git a/node_modules/react-native-unistyles/src/useStyles.ts b/node_modules/react-native-unistyles/src/useStyles.ts
index 2fc4a4d..0247b5d 100644
--- a/node_modules/react-native-unistyles/src/useStyles.ts
+++ b/node_modules/react-native-unistyles/src/useStyles.ts
@@ -32,13 +32,16 @@ export const useStyles = <ST extends StyleSheetWithSuperPowers>(
     const dynamicStyleSheet = useMemo(() => Object
         .entries(parsedStyles || {})
         .reduce((acc, [key, value]) => {
+       
             if (typeof value === 'function') {
                 return {
                     ...acc,
                     [key]: proxifyFunction(key, value, variants)
                 }
             }
-
+            if (key === 'container') {
+                console.log("==================>",value)
+            }
             return StyleSheet.create({
                 ...acc,
                 [key]: withPlugins(key, parseStyle(
diff --git a/node_modules/react-native-unistyles/src/utils/styles.ts b/node_modules/react-native-unistyles/src/utils/styles.ts
index a0d9862..a8d85f8 100644
--- a/node_modules/react-native-unistyles/src/utils/styles.ts
+++ b/node_modules/react-native-unistyles/src/utils/styles.ts
@@ -55,6 +55,11 @@ export const parseStyle = <T extends RNStyle>(
             return acc
         }
 
+        if (key === 'shadows' && Array.isArray(value)) {
+            acc[key] = value
+            return acc
+        }
+
         // values or platform colors
         if (typeof value !== 'object' || isPlatformColor(value)) {
             acc[key as keyof T] = value
